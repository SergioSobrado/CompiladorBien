TipodeDato float
TipodeDato int
Metodos public
Metodos static
TipodeDato final
Clases abstract
Referencias this
Funcion def
Condicion if
Negaciondecondicion 
Condicion elseif
Ciclo for
Condicion while
Comparador ==
Devolvervalorfuncion return
Clases class
TipodeDato var
TipodeDato let
TipodeDato const
Seleccion switch
Bloqueseleccionado case
Salirciclo 
TipodeDato double
TipodeDato char
TipodeDato bool
Ciclo do
Privado private
Subclase virtual
Eliminarinstancia delete
Intentar try
global catch
Lanzarerror throw
TipodeDato auto
Privado friend
Subclase operator
Clases explicit
Hilo thread
Finalcodigo ;
Separacion .
Agrupar (
Agrupar )
Agrupar [
Agrupar ]
IncioEstructura {
FinalEstructura }
Asignacion 
Alineamiento alignas
Alineamiento alignof
OperadorLogico and
OperadorAsignacion and_eq
Ensamblador asm
Atomico atomic_cancel
Atomico atomic_commit
Atomico atomic_noexcept
OperadorLogico bitand
OperadorLogico bitor
TipodeDato char8_t
TipodeDato char16_t
TipodeDato char32_t
Clases class
OperadorLogico compl
Concepto concept
Evaluador constveal
Evaluador constexpr
Evaluador constinit
Cambiardato const_cast
Funcion co_await
Funcion co_return
Funcion co_yield
Funcion decltype
TipodeDato double
TipodeDato enum
Clases explicit
Metodos export
Concepto extern
Falso 
Verdadero 
Saltar goto
Saltar jump
Funcion inline
TipodeDato long
Cambiardato mutable
Objetos namespace
Objetos new
Excepciones noexcept
OperadorLogico not
Nulo nullptr
OperadorLogico or
OperadorAsignacion or_eq
Clases protected
Concepto register
Cambiardato reinterpret_cast
Referencias requires
TipodeDato short
TipodeDato signed
Evaluador static_assert
Estructura struct
Plantilla template
Hilo thread_local
Evaluador typedef
Evaluador typeid
Evaluador typename
Cambiardato union
TipodeDato unsigned
TipodeDato void
Cambiardato volatile
TipodeDato wchar_t
OperadorLogico xor
OperadorAsignacion xor_eq
TipodeDato complex
Cambiardato dynamic_cast
Importar using
Ciclo continue
Clases extends
Clases super
Evaluador instaceof
Interfaz implements
Funcion function
Operador add
Operador adc
Comparador cmp
Operador dec
Operador div
Saltar jmp
Saltar jnz
Ensamblador lea
Ensamblador mov
Operador mul
OperadorLogico not
Pila pop
Pila push
Devolvervalorfuncion ret
Ensamblador shl
Ensamblador shr
Operador sub
Estructura array
Cambiardato as
Objetos clone
Funcion declare
Funcion die
Imprimir echo
Evaluador empty
FinalEstructura enddeclare
Ciclo endfor
Condicion endif
Seleccion endswitch
Condicion endwhile
Evaluador eval
Funcion exit
EjecutaCodigo finally
Ciclo foreach
TipodeDato global
Importar include
Concepto insteadof
Interfaz interface
Evaluador isset
Estructura list
Imprimir print
Importar require
Importar require_once
Concepto trait
Objetos use
Excepciones nullpointerexception
Excepciones arrayindexoutofboundsexception
Excepciones arithmeticexception
Excepciones ioexception
Excepciones filenotfoundexception
Excepciones classcastexception
Excepciones illegalstateexception
Excepciones illegalargumentexception
Excepciones securityexception
Excepciones outofmemoryerror
Excepciones stackoverflowerror
Excepciones concurrentmodificationexception
Excepciones socketexception
Excepciones unsupportedoperationexception
Excepciones parseexception
Excepciones numberformatexception
Excepciones nosuchmethodexception
Excepciones nosuchfieldexception
Excepciones interruptedexception
Excepciones assertionerror
Excepciones classnotfoundexception
Excepciones instantiationexception
Excepciones illegalaccessexception
Metodos alias
IncioEstructura BEGIN
IncioEstructura begin
Evaluador defined
Funcion END
Ciclo in
Ciclo next
Modulo module
Ciclo redo
Excepciones rescue
Intentar retry
Variables 0
Numero 1
Comparador >=
Comparador <=
